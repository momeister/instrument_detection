import librosa
import matplotlib.pyplot as plt
import numpy as np


wav_file_path = 'testklavier.mp3'
#wav_file_path = 'testgitarre.mp3'

# Wav-Datei einlesen
audio_data, sr = librosa.load(wav_file_path)

# Berechnen der Short-Time Fourier Transform (STFT) mit einer Auflösung von 256*2 Frequenzbändern
stft_data = librosa.stft(audio_data, n_fft=256)

# Analysieren der Obertonreihe
frequencies = librosa.fft_frequencies(sr=sr)[:len(stft_data[0])]  # Frequenzen für ein Zeitfenster
magnitudes = librosa.amplitude_to_db(abs(stft_data))

# Berechnen der Differenzen zwischen den Frequenzen
differences = np.diff(frequencies)

# Vergleichen der Differenzen mit den harmonischen Vielfachen der Grundfrequenz
harmonic_multiples = np.arange(2, frequencies[-1], 2)
harmonic_multiples = harmonic_multiples[:len(differences)]

print(harmonic_multiples)

# Anzahl der nicht-harmonischen Obertöne berechnen
non_harmonic_mask = ~np.isclose(differences, harmonic_multiples)
non_harmonic_count = np.count_nonzero(non_harmonic_mask)

# Schwellenwerte definieren
lower_threshold = 10
upper_threshold = 30

print(f"nicht harmonische Töne: {non_harmonic_count}")

# Klassifizieren
if non_harmonic_count < lower_threshold:
    instrument = 'Violine'
elif non_harmonic_count > upper_threshold:
    instrument = 'Klavier'
else:
    instrument = 'Unbekannt'

# Ausgabe des Ergebnisses
print(f'Instrument: {instrument}')
